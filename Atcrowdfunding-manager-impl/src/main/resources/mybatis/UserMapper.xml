<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.atcrowdfunding.manager.dao.UserMapper" >

    <resultMap id="BaseResultMap" type="com.atguigu.atcrowdfunding.bean.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="loginacct" property="loginacct" jdbcType="VARCHAR" />
        <result column="userpswd" property="userpswd" jdbcType="CHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="createtime" property="createtime" jdbcType="CHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, loginacct, userpswd, username, email, createtime
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.atguigu.atcrowdfunding.bean.UserExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from t_user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from t_user
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="com.atguigu.atcrowdfunding.bean.UserExample" >
        delete from t_user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.atguigu.atcrowdfunding.bean.User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user (id, loginacct, userpswd,
            username, email, createtime
            )
        values (#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR}, #{userpswd,jdbcType=CHAR},
            #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.atguigu.atcrowdfunding.bean.User" >
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="loginacct != null" >
                loginacct,
            </if>
            <if test="userpswd != null" >
                userpswd,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="createtime != null" >
                createtime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="loginacct != null" >
                #{loginacct,jdbcType=VARCHAR},
            </if>
            <if test="userpswd != null" >
                #{userpswd,jdbcType=CHAR},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null" >
                #{createtime,jdbcType=CHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.atguigu.atcrowdfunding.bean.UserExample" resultType="java.lang.Integer" >
        select count(*) from t_user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update t_user
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.loginacct != null" >
                loginacct = #{record.loginacct,jdbcType=VARCHAR},
            </if>
            <if test="record.userpswd != null" >
                userpswd = #{record.userpswd,jdbcType=CHAR},
            </if>
            <if test="record.username != null" >
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null" >
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.createtime != null" >
                createtime = #{record.createtime,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update t_user
        set id = #{record.id,jdbcType=INTEGER},
        loginacct = #{record.loginacct,jdbcType=VARCHAR},
        userpswd = #{record.userpswd,jdbcType=CHAR},
        username = #{record.username,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        createtime = #{record.createtime,jdbcType=CHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.atcrowdfunding.bean.User" >
        update t_user
        <set >
            <if test="loginacct != null" >
                loginacct = #{loginacct,jdbcType=VARCHAR},
            </if>
            <if test="userpswd != null" >
                userpswd = #{userpswd,jdbcType=CHAR},
            </if>
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null" >
                createtime = #{createtime,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.atguigu.atcrowdfunding.bean.User" >
        update t_user
        set loginacct = #{loginacct,jdbcType=VARCHAR},

            username = #{username,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR}

        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--#{} 里面取得是map里面key的取值，map的key-->
    <select id="queryUserLogin" parameterType="map" resultMap="BaseResultMap">
        select id, loginacct, userpswd, username, email, createtime
        from t_user where loginacct = #{loginacct} and userpswd = #{userpswd}
    </select>

<!--    <select id="queryList" resultMap="BaseResultMap">-->
<!--        select id, loginacct, userpswd, username, email, createtime-->
<!--        from t_user limit #{startIndex}, #{pagesize}-->
<!--    </select>-->

<!--    <select id="queryCount" resultType="int">-->
<!--        select count(*) from t_user-->
<!--    </select>-->


    <!--sql语句中使用#{queryText} 能够直接取出map中对应key的值   -->
    <select id="queryList" resultMap="BaseResultMap">
        select id, loginacct, userpswd, username, email, createtime
        from t_user 
        <where>
            <if test="queryText!=null">
                loginacct like concat("%", #{queryText}, "%")
            </if>
        </where>
        order by createtime desc
        limit #{startIndex}, #{pagesize}
    </select>

    <select id="queryCount" resultType="int">
        select count(*) from t_user
        <where>
            <if test="queryText!=null">
                loginacct like concat("%", #{queryText}, "%")
            </if>
        </where>
    </select>

<!--    根据集合批量删除-->

    <delete id="deleteBatchUserByVO" >
        delete from t_user where id in
        <foreach collection="datas" open="(" close=")" separator="," item="user">
            #{user.id}
        </foreach>
    </delete>


    <select id="queryAllRole" resultType="role">
        select id, name from t_role;
    </select>

    <select id="queryRoleByUserid" parameterType="int" resultType="int">
        select roleid from t_user_role where userid = #{userid}
    </select>

    <insert id="saveUserRoleRelationship">
        <foreach collection="data.ids" item="roleid" separator=";">
            insert into t_user_role (userid, roleid) values (#{userid}, #{roleid})
        </foreach>
    </insert>

    <delete id="deleteUserRoleRelationship">
        delete from t_user_role where userid = #{userid} and roleid in
        <foreach collection="data.ids" item="roleid" open="(" separator="," close=")">
            #{roleid}
        </foreach>
    </delete>
</mapper>